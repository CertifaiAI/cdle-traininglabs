<?xml version="1.0" encoding="UTF-8"?>

<!--
* Copyright (c) 2020-2021 CertifAI Sdn. Bhd.

* This program and the accompanying materials are made available under the
* terms of the Apache License, Version 2.0 which is available at
* https://www.apache.org/licenses/LICENSE-2.0.

* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
* WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
* License for the specific language governing permissions and limitations
* under the License.

* SPDX-License-Identifier: Apache-2.0
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <groupId>ai.certifai</groupId>
    <artifactId>cdle-traininglabs</artifactId>
    <packaging>pom</packaging>
    <modelVersion>4.0.0</modelVersion>
    <version>1.0.0-alpha</version>

    <name>Training Labs Parent</name>
    <description>Hands on labs training</description>
    <url>https://certifai.ai/</url>

    <properties>
        <!-- Change the nd4j.backend property to nd4j-cuda-*.*-platform example: nd4j-cuda-11.2-platform to use CUDA GPUs -->
        <nd4j.backend>nd4j-native-platform</nd4j.backend>
        <!-- Change the dl4j.cuda.backend property to deeplearning4j-cuda-*.* example: deeplearning4j-cuda-11.2 to use CuDNN -->
        <dl4j.cuda.backend>deeplearning4j-cuda-11.2</dl4j.cuda.backend>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <shadedClassifier>bin</shadedClassifier>

        <java.version>1.8</java.version>
        <nd4j.version>1.0.0-M1.1</nd4j.version>
        <dl4j.version>1.0.0-M1.1</dl4j.version>
        <datavec.version>1.0.0-M1.1</datavec.version>

        <javacv.version>1.5.5</javacv.version>
        <ffmpeg.version>3.2.1-1.3</ffmpeg.version>
        <zip4j.version>2.2.6</zip4j.version>
        <slf4j.version>2.0.0-alpha1</slf4j.version>
        <httpclient.version>4.5.12</httpclient.version>

        <maven-compiler-plugin.version>3.6.1</maven-compiler-plugin.version>
        <maven-shade-plugin.version>2.4.3</maven-shade-plugin.version>
        <exec-maven-plugin.version>1.4.0</exec-maven-plugin.version>
        <maven.minimum.version>3.3.1</maven.minimum.version>
        <javafx.version>2.2.3</javafx.version>
        <lombok.version>1.18.16</lombok.version>

        <!-- Declare javafx version for javafx profile -->
        <javafx16.version>16</javafx16.version>

        <!-- Adding Sonar properties for Sonar Cloud code scan -->
        <sonar.projectKey>CertifaiAI_TrainingLabs</sonar.projectKey>
        <sonar.moduleKey>${project.artifactId}</sonar.moduleKey>
        <sonar.organization>certifaiai</sonar.organization>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
         

    </properties>

    <modules>
        <module>dl4j-labs</module>
        <module>dl4j-cv-labs</module>
    </modules>

    <!-- Maven Enforcer: Ensures user has an up to date version of Maven before building -->
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.0.1</version>
                <executions>
                    <execution>
                        <id>enforce-default</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>[${maven.minimum.version},)</version>
                                    <message>********** Minimum Maven Version is ${maven.minimum.version}. Please upgrade Maven before continuing (run "mvn --version" to check). **********</message>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <groupId>com.lewisd</groupId>
                <artifactId>lint-maven-plugin</artifactId>
                <version>0.0.11</version>
                <configuration>
                    <failOnViolation>true</failOnViolation>
                    <onlyRunRules>
                        <rule>DuplicateDep</rule>
                        <rule>RedundantPluginVersion</rule>
                        <!-- Rules incompatible with Java 9
                        <rule>VersionProp</rule>
                        <rule>DotVersionProperty</rule> -->
                    </onlyRunRules>
                </configuration>
                <executions>
                    <execution>
                        <id>pom-lint</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>com.lewisd</groupId>
                                        <artifactId>lint-maven-plugin</artifactId>
                                        <versionRange>[0.0.11,)</versionRange>
                                        <goals>
                                            <goal>check</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore/>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>


    </build>

    <profiles>

        <profile>
            <id>OpenJFX</id>
            <activation>
                <jdk>1.7</jdk>
            </activation>

            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <version>1.0.1</version>
                        <executions>
                            <execution>
                                <id>enforce-default</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireProperty>
                                            <property>env.JAVAFX_HOME</property>
                                            <message>You must set the environment variable JAVAFX_HOME to the installation directory of the JavaFX 2.0 SDK! (with Oracle JDK1.7, $JRE_HOME/lib/jfxrt.jar)</message>
                                        </requireProperty>

                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-install-plugin</artifactId>
                        <version>2.5.2</version>
                        <executions>
                            <execution>
                                <id>install-external</id>
                                <phase>clean</phase>
                                <configuration>
                                    <file>${javafx.runtime.lib.jar}</file>
                                    <repositoryLayout>default</repositoryLayout>
                                    <groupId>com.oracle</groupId>
                                    <artifactId>javafx</artifactId>
                                    <version>${javafx.version}</version>
                                    <packaging>jar</packaging>
                                    <generatePom>true</generatePom>
                                </configuration>
                                <goals>
                                    <goal>install-file</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>


        <!-- Adding profile for downloading JavaFX as Java 11 does not contain JavaFX (This is for the sake running the code test in GitHub Action) -->
        <profile>
            <id>javafx</id>
            <dependencies>
                <!-- https://mvnrepository.com/artifact/org.openjfx/javafx-swing -->
                <dependency>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-swing</artifactId>
                    <version>${javafx16.version}</version>
                </dependency> 
            
                <!-- https://mvnrepository.com/artifact/org.openjfx/javafx-controls -->
                <dependency>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-controls</artifactId>
                    <version>${javafx16.version}</version>
                </dependency> 
            </dependencies>
        </profile>

    </profiles>

    

</project>
